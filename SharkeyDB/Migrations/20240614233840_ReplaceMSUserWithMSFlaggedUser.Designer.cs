// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SharkeyDB;

#nullable disable

namespace SharkeyDB.Migrations
{
    [DbContext(typeof(SharkeyContext))]
    [Migration("20240614233840_ReplaceMSUserWithMSFlaggedUser")]
    partial class ReplaceMSUserWithMSFlaggedUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SharkeyDB.Entities.MSFlaggedUser", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("user_id");

                    b.Property<DateTime>("FlaggedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("flagged_at");

                    b.HasKey("UserId");

                    b.ToTable("ms_flagged_user");
                });

            modelBuilder.Entity("SharkeyDB.Entities.MSQueuedUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("ms_queued_user");
                });

            modelBuilder.Entity("SharkeyDB.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("id");

                    b.Property<string>("Host")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("host");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("isDeleted");

                    b.Property<bool>("IsSuspended")
                        .HasColumnType("boolean")
                        .HasColumnName("isSuspended");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("username");

                    b.Property<string>("UsernameLower")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("usernameLower");

                    b.HasKey("Id");

                    b.ToTable("user", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("SharkeyDB.Entities.MSQueuedUser", b =>
                {
                    b.HasOne("SharkeyDB.Entities.User", "User")
                        .WithOne("MSQueuedUser")
                        .HasForeignKey("SharkeyDB.Entities.MSQueuedUser", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SharkeyDB.Entities.User", b =>
                {
                    b.Navigation("MSQueuedUser");
                });
#pragma warning restore 612, 618
        }
    }
}
